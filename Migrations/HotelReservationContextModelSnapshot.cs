// <auto-generated />
using System;
using HotelReservation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelReservation.Migrations
{
    [DbContext(typeof(HotelReservationContext))]
    partial class HotelReservationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelReservation.Models.MealRates", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<int>("HighSeasonRate");

                    b.Property<int>("LowSeasonRate");

                    b.Property<string>("MealPlan")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MealRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HighSeasonRate = 10,
                            LowSeasonRate = 5,
                            MealPlan = "HalfBoard"
                        },
                        new
                        {
                            Id = 2,
                            HighSeasonRate = 25,
                            LowSeasonRate = 20,
                            MealPlan = "FullBoard"
                        },
                        new
                        {
                            Id = 3,
                            HighSeasonRate = 30,
                            LowSeasonRate = 25,
                            MealPlan = "AllInclusive"
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.RoomRates", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("date");

                    b.Property<int>("RatePerRoom");

                    b.Property<string>("RoomType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("RoomRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateFrom = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RatePerRoom = 80,
                            RoomType = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            DateFrom = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RatePerRoom = 50,
                            RoomType = "Standard"
                        },
                        new
                        {
                            Id = 3,
                            DateFrom = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RatePerRoom = 120,
                            RoomType = "SeaView"
                        },
                        new
                        {
                            Id = 4,
                            DateFrom = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2022, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RatePerRoom = 90,
                            RoomType = "SeaView"
                        },
                        new
                        {
                            Id = 5,
                            DateFrom = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RatePerRoom = 100,
                            RoomType = "SeaView"
                        });
                });

            modelBuilder.Entity("HotelReservation.Models.Rooms", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsReserved");

                    b.Property<string>("RoomType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelReservation.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<int?>("Age");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Gender");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RoomId")
                        .HasColumnName("RoomID");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelReservation.Models.Users", b =>
                {
                    b.HasOne("HotelReservation.Models.Rooms", "Room")
                        .WithMany("Users")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Users_Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
